defmodule Elixirs.MiniStringInterpreterTest do
  alias Elixirs.MiniStringInterpreter

  use ExUnit.Case

  test "#execute: hello world" do
    hello_world_program = "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++.+++++++++++++++++++++" <>
                          "++++++++.+++++++..+++.+++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++.+++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++.+++++++++++++" <>
                          "++++++++++++++++++++++++++++++++++++++++++.++++" <>
                          "++++++++++++++++++++.+++.++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "++++++++++++++++++++++++++++++++++++++++.++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++.+++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++++++++++++++++++++++++++++++++++++++++" <>
                          "+++++++++."

    assert MiniStringInterpreter.execute(hello_world_program) == "Hello, World!"
  end

  test "#execute: english alphabet" do
    alphabet_program = String.duplicate("+", 65) <> String.duplicate(".+", 25) <> "."

    assert MiniStringInterpreter.execute(alphabet_program) == "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  end

  test "Ignores chars that are not + or .  v1" do
    str = "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+.\n+."

    assert MiniStringInterpreter.execute(str) == "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  end

  test "Ignores chars that are not + or .  v2" do
    str = "+++++sdfs++++sdf++++sdklfjsdklfdjmvncxmnxmiuroewurwio+++++++++++++2423423++234+23++234+23++342+2++24++234++++++++++++++???++++++%+++++$#$#++++++++.+++++ssdf+++++++++++++++S+SDFSFSFWWET+BCV+BC+VBN+V+X+++.+++++++.WER.+++.++++++++++++++++++WERW+ERWE++++++++++++XCV+XC++++++++++++++++CXV+XC+XCV++++++++++++++++++++++++XCVXCXCVSTTYJFGDF++++++++++++++++s+dfs+sdf++sdsd+f++SDFS+DFS+FdfsdRTETRCBVCsdfsdf

    assert MiniStringInterpreter.execute(str) == "Hello, World!"
  end

  test "Ignores chars that are not + or .  v3" do
    str = "+++n+nnn*se++*e+e+***+enn+nn+***eess+++++s**+n++++++****+++s+s++*+ww++www+**+++++s**++++www***+w+w+www+****++++s+++++www+++s+++ss+ss+ws+s+.+w.s+s.+.+.ww+.s+.sw+ssssssw.+w.+.+s.+.+.+nessew.+.+.+.+.news+.+.+.+sewn.+.sesse+.+.see+.w"

    assert MiniStringInterpreter.execute(str) == "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  end

  test "Does not add trailing codepoint without . cmd" do
    str

    assert MiniStringInterpreter.execute(str) == "Codewars"
  end

  test "Adds last codepoint with . cmd" do
    str

    assert MiniStringInterpreter.execute(str) == "Codewars"
  end
end
